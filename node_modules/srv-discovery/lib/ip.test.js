const assert = require('assert');
const { parseIp } = require('./ip');

describe('ip', function () {
	describe('parseIp()', function () {
		const validTests = [
			['127.0.0.1', '4', '127.0.0.1', undefined],
			['127.0.0.1:888', '4', '127.0.0.1', 888],
			['::1', '6', '::1', undefined],
			['[2001:db8::1]:80', '6', '2001:db8::1', 80],
			['2001:db8::1.80', '6', '2001:db8::1', 80],
			['2001:db8::1 port 80', '6', '2001:db8::1', 80],
			['2001:db8::1p80', '6', '2001:db8::1', 80],
			['2001:db8::1#80', '6', '2001:db8::1', 80],
		];

		const invalidTests = [
			'127.0.0.1:99999',
			'[::1]:99999',
			'[::1',
		];

		for (const [str, family, ip, port] of validTests) {
			it(`should parse ${str}`, function () {
				assert.deepEqual(parseIp(str), { family, ip, port });
			});
		}

		for (const str of invalidTests) {
			it(`should not parse ${str}`, function () {
				assert.strictEqual(parseIp(str), undefined);
			});
		}
	});
});
